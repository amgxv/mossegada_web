version: '3.3'  
services:
## POSTGRES DATABASE  
  postgres:
    image: postgres:latest
    volumes:
      - postgres_vol:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB='DATABASE'
      - POSTGRES_USER='USERNAME'
      - POSTGRES_PASSWORD='PASSWORD'
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    networks:
      - traefik 

## NGINX-REVERSE
  nginx:
    image: nginx:latest
    deploy:
      replicas: 2
      labels:
        - "traefik.port=80"
        - "traefik.docker.network=traefik"
        - "traefik.frontend.rule=Host:'HOST'"
        - "traefik.backend.loadbalancer.sticky=true"
      restart_policy:
        condition: any
    volumes:
      - ./config/nginx/:/etc/nginx/conf.d/:ro
      - mossegada_static:/static
      - mossegada_media:/media
    networks:
      - traefik

## DJANGO
  django:
    image: amgxv/mossegada_web:latest
    command: bash -c "python djangosecret.py && python manage.py migrate && gunicorn -k gevent RestaurantsProject.wsgi -b 0.0.0.0:8000"
    environment:
      - DB_NAME='DATABASE'
      - DB_USER='USERNAME'
      - DB_PASS='PASSWORD'
      - DB_HOST='HOSTNAME'
      - DB_PORT='PORT'
      - SMTP_HOST='SMTP'
      - SMTP_USER='USER'
      - SMTP_PASS='PASSWORD'
      - SMTP_PORT='PORT'
      - SMTP_USE_TLS='False'
      - DEFAULT_FROM_EMAIL='noreply@localhost.com'
      - REDIS_HOST='HOST'
      - REDIS_PORT='PORT'
      - REDIS_DB='DB'
      - GMAPS_API='API_KEY'
    depends_on:
      - postgres
    volumes:
      - mossegada_app_p:/mossegada_app/RestaurantsProject
      - mossegada_static:/mossegada_app/staticfiles
      - mossegada_media:/mossegada_app/web_restaurants/media/
    deploy:
      replicas: 2
      restart_policy:
        condition: any
    networks:
      - traefik

## SMTP
  smtp:
    image: catatnight/postfix
    environment:
      - maildomain='DOMAIN'
      - smtp_user='USERNAME:PASSWORD'
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    networks:
      - traefik

## TRAEFIK
  traefik:
    image: traefik
    command: --web --docker --docker.swarmmode --docker.watch --logLevel=DEBUG
    networks:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-swarm/traefik.toml:/etc/traefik/traefik.toml:ro
      - traefic_acme:/etc/traefik/acme
    ports:
     - "80:80"
     - "443:443"
#     - "8080:8080" #Port for web dashboard
    deploy:
      replicas: 2
      placement:
        constraints: [node.role==manager]
      restart_policy:
        condition: on-failure

volumes:
  mossegada_static:
  mossegada_media:
  mossegada_app_p:
  traefic_acme:
  postgres_vol:

networks:
  traefik:
    driver: overlay
